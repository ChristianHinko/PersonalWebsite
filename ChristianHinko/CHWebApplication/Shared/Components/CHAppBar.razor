@using Services
@inject CHLayoutService LayoutService

<MudAppBar Color="@Color.Primary" Elevation="1">
    <MudLink Class="me-4" Color="@Color.Default" Underline="@Underline.None" Href="/"> <!-- use Color.Default to override MudLink from changing the color to Color.Primary -->
        <MudText Typo="@Typo.h5">Christian Hinkle</MudText>
    </MudLink>
    <MudStack Row="true" Spacing="4" Col>
        @* Populate stack with buttons *@
        @foreach (var hrefText in HrefTextButtonList)
        {
            <MudButton Variant="@Variant.Text" Href="@hrefText.Href">
                <MudText>@hrefText.Text</MudText>
            </MudButton>
        }
    </MudStack>
    <MudSpacer />
    <MudTooltip Text="@(LayoutService.IsDarkMode ? "Switch to Light Mode" : "Switch to Dark Mode")" Delay="2000.0">
        <MudIconButton Icon="@(LayoutService.IsDarkMode ? Icons.Material.Filled.DarkMode : Icons.Material.Outlined.DarkMode)" OnClick="@LayoutService.ToggleIsDarkMode" Edge="@Edge.End" /> <!-- use Edge.End to align the icon (instead of the outer button) to the end edge -->
    </MudTooltip>
</MudAppBar>

@code
{
    /// <summary>
    /// A hyperlink reference grouped with its display text.
    /// </summary>
    public struct HrefText
    {
        public string Href { get; set; }
        public string Text { get; set; }
    }

    /// <summary>
    /// Populates buttons on the App Bar.
    /// </summary>
    [Parameter]
    public List<HrefText> HrefTextButtonList { get; set; } = new List<HrefText>();
}
