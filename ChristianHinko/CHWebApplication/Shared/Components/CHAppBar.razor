@using MudBlazorExtensionLibrary.Services
@inject MBELLayoutService LayoutService

<MudAppBar Color="@Color.Primary" Elevation="1">
    <!-- Navigation -->
    <MudLink Class="me-4" Color="@Color.Default" Underline="@Underline.None" Href="/">
        <MudText Style="color: var(--mud-palette-appbar-text);" Typo="@Typo.h5">Christian Hinkle</MudText>
    </MudLink>
    <MudStack Row="true" Spacing="4">
        @* Populate stack with buttons *@
        @foreach (var hrefText in HrefTextButtonList)
        {
            <MudButton Variant="@Variant.Text" Href="@hrefText.Href">
                <MudText Style="color: var(--mud-palette-appbar-text);" Typo="@Typo.body1">
                    @hrefText.Text
                </MudText>
            </MudButton>
        }
    </MudStack>
    <MudSpacer />
    <!-- End buttons -->
    <MudTooltip Text="@(LayoutService.RightToLeft ? "Switch to Left-Aligned" : "Switch to Right-Aligned")" Delay="2000.0">
        <MudIconButton Style="color: var(--mud-palette-appbar-text);" Icon="@(LayoutService.RightToLeft ? Icons.Material.Filled.FormatAlignLeft : Icons.Material.Filled.FormatAlignRight)" OnClick="@LayoutService.ToggleRightToLeft" />
    </MudTooltip>
    <MudTooltip Text="@(LayoutService.IsDarkMode ? "Switch to Light Mode" : "Switch to Dark Mode")" Delay="2000.0">
        <MudIconButton Style="color: var(--mud-palette-appbar-text);" Icon="@(LayoutService.IsDarkMode ? Icons.Material.Filled.DarkMode : Icons.Material.Outlined.DarkMode)" OnClick="@LayoutService.ToggleIsDarkMode" Edge="@Edge.End" /> <!-- use Edge.End to align the icon (instead of the outer button) to the end edge -->
    </MudTooltip>
</MudAppBar>

@code
{
    /// <summary>
    /// A hyperlink reference grouped with its display text.
    /// </summary>
    public struct HrefText
    {
        public string Href { get; set; }
        public string Text { get; set; }
    }

    /// <summary>
    /// Populates buttons on the App Bar.
    /// </summary>
    [Parameter]
    public List<HrefText> HrefTextButtonList { get; set; } = new List<HrefText>();
}
